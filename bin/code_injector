#!/usr/bin/env ruby

# ./bin/code_injector

if ENV["PWD"].split(/\//)[-1] == "gta-scm"
  $: << "./lib"
  require 'gta_scm'
end

require 'gta_scm/thread'

require 'ragweed'
require 'ragweed/debuggerosx'

SCM_ADDRESS = 8520328
SCM_SIZE = 2048
THREAD_CONTROL_BLOCK_ADDRESS = 8252624
THREAD_SIZE = 136
MAX_THREADS = 127

pid = nil

if !pid
  pid = `ps -A | grep -m1 'Vice City.app' | awk '{print $1}'`.to_i
end

process = Ragweed::Debuggerosx.new(pid)

Ragweed::Wraposx::task_suspend(process.task)

scm_bytes = Ragweed::Wraposx::vm_read(process.task,SCM_ADDRESS,SCM_SIZE)
threads = []

start = THREAD_CONTROL_BLOCK_ADDRESS
stop = start + (THREAD_SIZE * MAX_THREADS)
addr = start
thread_id = 0
while addr < stop
  bytes = Ragweed::Wraposx::vm_read(process.task,addr,THREAD_SIZE)
  bytes = GtaScm::FileWalker.new( StringIO.new(bytes) )

  thread = GtaScm::Thread.new
  thread.offset = addr
  thread.eat!( bytes )

  threads << thread
  thread_id += 1
  addr += THREAD_SIZE
end

target_thread_idx = threads.find_index {|thread| thread.active? && thread.name == "main"}
target_thread = threads[target_thread_idx]

target_pc = 869
target_pcb = GtaScm::Types.value2bin(target_pc,:int32)

target_pos = target_thread.offset + 16

puts "Rewriting thread #{target_thread_idx} PC to #{target_pc}"

# Ragweed::Wraposx::vm_write expects that you are writing pointers to strings
# If you want to write a raw integer value, we have to use the C function directly
Ragweed::Wraposx::Libc.vm_write(process.task, target_pos, target_pcb, target_pcb.size)

Ragweed::Wraposx::task_resume(process.task)

