#!/usr/bin/env ruby

# sudo ./bin/rpc [rpc ID or name] [RPC args ...]

if ENV["PWD"].split(/\//)[-1] == "gta-scm"
  $: << "./lib"
  require 'gta_scm'
end

require 'gta_scm/process'
process = GtaScm::Process.new
process.load_symbols!("debug-rpc.gta-scm-symbols")

# Internal code in _out/san-andreas-experiments/debug-rpc
RPCS = {}
# RPCS[  1 ] = [ "create_thread", { 0=>:thread_offset, 1=>:thread_name,2=>:thread_name, 3=>:thread_created } ]
RPCS[  1 ] = "create_thread"
# RPCS[  2 ] = [ "kill_named_thread", { 0=>:thread_name } ]
RPCS[  2 ] = "kill_named_thread"

if ARGV.size == 0
  puts "  % sudo bundle exec ./bin/rpc [RPC #] [args...]"
  puts "available RPCs:"
  RPCS.each_pair do |rpc_id,rpc|
    puts "#{rpc_id}: #{rpc.inspect}"
  end
  exit
else
  puts ARGV.inspect
end

args = ARGV.dup
syscall_id = args.shift
if syscall_id.match(/\d+/)
  syscall_id = syscall_id.to_i
else
  syscall_id = RPCS.invert[syscall_id]
end

process.detect_pid_and_attach!

process.rpc(syscall_id,*args)
